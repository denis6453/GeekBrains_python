# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# n = int(input("Введите количество элементов первого множества: "))

# m = int(input("Введите количество элементов Второго множества: "))

# list_1 = []

# for i in range(1, n + 1):
#     list_1.append(input("Введите {} элемент первого списка: ".format(i)))

# list_2 = []

# for i in range(1, m + 1):
#     list_2.append(input("Введите {} элемент Второго списка: ".format(i)))

# print (*list_1)
# print (*list_2)

# print ("Полученное множество {}".format(*sorted(list((set(list_1) & set(list_2))))))

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло a[i] ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном списке урожайности грядки.


def max (list_1) -> int:
    max_element = list_1[0]
    for i in list_1:
        if i > max_element:
            max_element = i
    return max_element

lst = [1, 2, 3, 4, 5, 6, 7]
sums = []

for i in range(len(lst)-2):
    sums.append(lst[i] + lst[i+1] + lst[i+2])

print(sums)

print(max(sums))


# задача 1 необязательная. Напишите программу, которая получает целое число и возвращает его двоичное, восьмеричное строковое представление.
# Функции bin и oct используйте для проверки своего результата.
# *Дополнительно
# Попробуйте избежать дублирования кода в преобразованиях к разным системам счисления
# Избегайте магических чисел
# Добавьте аннотацию типов где это возможно
# Используйте функции

# задача 2 необязательная.
# Даны два многочлена, которые вводит пользователь.
# Задача - сформировать многочлен, содержащий сумму многочленов.
# Степени многочленов могут быть разные.

# например на входе 2x^2 + 4x + 5 = 0 и 5x^3 - 3*x^2 - 12 = 0
# на выходе будет 5x^3 - x^2 + 4х - 7 = 0
# можно использовать модуль re